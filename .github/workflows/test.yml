# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: CI Test

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - '**'

env:
  DOCKERHUB_SLUG: openbayes/docusaurus-prince-pdf
  GHCR_SLUG: ghcr.io/signcl/docusaurus-prince-pdf

jobs:
  build-n-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'

    - name: Get Yarn cache dir
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Set up cache key for node_modules
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install Node.js dependencies
      run: yarn --frozen-lockfile

    - name: Install Prince
      run: |
        curl https://www.princexml.com/download/prince-14.2-linux-generic-x86_64.tar.gz -O
        tar zxf prince-14.2-linux-generic-x86_64.tar.gz
        cd prince-14.2-linux-generic-x86_64
        yes "" | sudo ./install.sh

    - name: Build PDF
      run: yarn test

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: result
        path: pdf/docusaurus.io-docs.pdf
        if-no-files-found: error

    # Start build Docker image
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.DOCKERHUB_SLUG }}
          ${{ env.GHCR_SLUG }}
        tags: |
          type=edge
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build and push
      uses: docker/bake-action@v3
      with:
        files: |
          ./docker-bake.hcl
          ${{ steps.meta.outputs.bake-file }}
        targets: build-all
        push: ${{ github.event_name != 'pull_request' }}
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max
